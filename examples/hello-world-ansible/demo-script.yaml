#!/usr/bin/env iidy demo
$imports:
  nameSuffix: random:dashed-name
  StackName: "literal:iidy-ansible-comparison-{{ nameSuffix }}"

files:
  cfn-template.yaml: |-
    Parameters:
      Name:
        Type: String
    Resources:
      HelloWorld:
        Type: AWS::SNS::Topic
        Properties:
          DisplayName: !Sub "Hello ${Name}"

  broken-cfn-template.yaml: |-
    Parameters:
      Name:
        Type: String
    Resources:
      HelloWorld:
        Type: AWS::SNS::Topic
        Properties:
          DisplayName: !Sub "Hello ${Name}"
          Foo: 1234

  stack-args.yaml: |-
    StackName: "{{ StackName }}"  # auto generated name
    Template: ./cfn-template.yaml

    Profile: sandbox
    Region: us-west-2

    Parameters:
      Name: world

    Tags:
      owner: your-name
      project: iidy-demo
      environment: development
      lifetime: short

  inventory/localhost: |-
    localhost ansible_connection=local ansible_python_interpreter="/usr/bin/env python"

  create-stack.yml: |-
    - hosts: all
      gather_facts: no
      connection: local
      vars: {}
      tasks:
        - name: ensure stack exists
          cloudformation:
            stack_name: "{{ StackName }}"
            region: "us-west-2"
            state: 'present'
            disable_rollback: true
            template: "cfn-template.yaml"
            template_parameters:
              Name: "World"
            tags:
              owner: "your-name"
              project: "iidy-demo"
              environment: "development"
              lifetime: "short"
demo:
  - setenv:
      AWS_REGION: us-west-2
      AWS_PROFILE: sandbox

  - banner: We're going to compare the developer experience of Ansible and iidy.
  - sleep: 2
  - banner: First, we create the stack with ansible.
  - ansible-playbook -i inventory/localhost create-stack.yml
  - silent: aws cloudformation describe-stacks --stack-name "{{ StackName }}" --query 'Stacks[0].StackId' --output text > stackid.txt

  - banner: Then we run a broken update.
  - mv broken-cfn-template.yaml cfn-template.yaml
  - ansible-playbook -i inventory/localhost create-stack.yml || true
  - silent: date

  - banner: |-
      Note the unreadable failure message & the timestamp.

      Ansible gives us no feedback until after the rollback is
      complete. That could be a *very long time* on a large stack.

  - sleep: 3
  - banner: Let's try that again with iidy for comparison.
  - sleep: 3
  - iidy update-stack stack-args.yaml || true

  - banner: "We'll use iidy to cleanup the stack"
  - sleep: 1
  #- aws cloudformation delete-stack --stack-name "{{ StackName }}"
  - iidy delete-stack --yes "{{ StackName }}"
